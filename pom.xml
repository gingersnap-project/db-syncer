<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.gingersnap-project</groupId>
  <artifactId>db-syncer</artifactId>
  <version>0.1-SNAPSHOT</version>
  <properties>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <maven.compiler.release>17</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.version>2.16.2.Final</quarkus.platform.version>
    <skipITs>true</skipITs>
    <surefire-plugin.version>3.0.0-M7</surefire-plugin.version>
    <!-- use the same antlr version as debezium. Update it when debezium is updated -->
    <version.antlr>4.8</version.antlr>
    <version.debezium>2.0.0.Final</version.debezium>
    <version.infinispan>14.0.6.Final</version.infinispan>
    <version.oracle.ojdbc11>21.6.0.0</version.oracle.ojdbc11>
    <os-maven-plugin.version>1.6.2</os-maven-plugin.version>
    <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
    <org.gingersnap.api.basedir>${project.basedir}/gingersnap-api</org.gingersnap.api.basedir>
    <skipGingersnapAdditionalTests>true</skipGingersnapAdditionalTests>
    <functionalTestOnly>false</functionalTestOnly>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
      <dependency>
        <groupId>com.oracle.database.jdbc</groupId>
        <artifactId>ojdbc11</artifactId>
        <version>${version.oracle.ojdbc11}</version>
      </dependency>
    <dependency>
      <groupId>io.debezium</groupId>
      <artifactId>debezium-core</artifactId>
      <version>${version.debezium}</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.datatype</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.debezium</groupId>
      <artifactId>debezium-api</artifactId>
      <version>${version.debezium}</version>
    </dependency>
    <dependency>
      <groupId>io.debezium</groupId>
      <artifactId>debezium-embedded</artifactId>
      <version>${version.debezium}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.kafka</groupId>
          <artifactId>kafka-tools</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.jaxrs</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.datatype</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.jersey.containers</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.jersey.inject</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4</artifactId>
      <version>${version.antlr}</version>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4-runtime</artifactId>
      <version>${version.antlr}</version>
    </dependency>
    <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-client-hotrod</artifactId>
    </dependency>
    <dependency>
      <groupId>io.debezium</groupId>
      <artifactId>debezium-connector-mysql</artifactId>
      <version>${version.debezium}</version>
    </dependency>
    <dependency>
      <groupId>io.debezium</groupId>
      <artifactId>debezium-connector-postgres</artifactId>
      <version>${version.debezium}</version>
    </dependency>
    <dependency>
      <groupId>io.debezium</groupId>
      <artifactId>debezium-connector-sqlserver</artifactId>
      <version>${version.debezium}</version>
    </dependency>
    <dependency>
      <groupId>io.debezium</groupId>
      <artifactId>debezium-connector-oracle</artifactId>
      <version>${version.debezium}</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-kubernetes-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-kubernetes-service-binding</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java-util</artifactId>
      <version>3.11.4</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-mockito</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mysql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>oracle-xe</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mssqlserver</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>default-test</id>
            <configuration>
              <systemPropertyVariables>
                <quarkus.test.profile>test</quarkus.test.profile>
                <functionalTestOnly>true</functionalTestOnly>
              </systemPropertyVariables>
            </configuration>
          </execution>

          <!-- Running tests with different DB providers -->
          <execution>
            <id>mysql</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>${functionalTestOnly}</skip>
              <reportNameSuffix>mysql</reportNameSuffix>
              <systemPropertyVariables>
                <quarkus.test.profile>mysql</quarkus.test.profile>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>postgres</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <!--<skip>${skipGingersnapAdditionalTests}</skip>-->
              <skip>true</skip>
              <reportNameSuffix>postgres</reportNameSuffix>
              <systemPropertyVariables>
                <quarkus.test.profile>postgres</quarkus.test.profile>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>oracle</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>${skipGingersnapAdditionalTests}</skip>
              <reportNameSuffix>oracle</reportNameSuffix>
              <systemPropertyVariables>
                <quarkus.test.profile>oracle</quarkus.test.profile>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>mssql</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>${skipGingersnapAdditionalTests}</skip>
              <reportNameSuffix>mssql</reportNameSuffix>
              <systemPropertyVariables>
                <quarkus.test.profile>msserver</quarkus.test.profile>
              </systemPropertyVariables>
            </configuration>
          </execution>

          <!-- Executions for running with another HR server -->
          <execution>
            <id>infinispan-mysql</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>${skipGingersnapAdditionalTests}</skip>
              <reportNameSuffix>infinispan-mysql</reportNameSuffix>
              <systemPropertyVariables>
                <quarkus.test.profile>infinispan,mysql</quarkus.test.profile>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>infinispan-postgres</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>${skipGingersnapAdditionalTests}</skip>
              <reportNameSuffix>infinispan-postgres</reportNameSuffix>
              <systemPropertyVariables>
                <quarkus.test.profile>infinispan,postgres</quarkus.test.profile>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>infinispan-oracle</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>${skipGingersnapAdditionalTests}</skip>
              <reportNameSuffix>infinispan-oracle</reportNameSuffix>
              <systemPropertyVariables>
                <quarkus.test.profile>infinispan,oracle</quarkus.test.profile>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>infinispan-mssql</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <!--<skip>${skipGingersnapAdditionalTests}</skip>-->
              <!-- MSSQL stores a big JSON in the schema. Needs https://issues.redhat.com/browse/ISPN-14532 to work. -->
              <skip>true</skip>
              <reportNameSuffix>infinispan-mssql</reportNameSuffix>
              <systemPropertyVariables>
                <quarkus.test.profile>infinispan,msserver</quarkus.test.profile>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${os-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>detect</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>${protobuf-maven-plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <protoSourceRoot>${org.gingersnap.api.basedir}</protoSourceRoot>
          <includes>
            <include>config/**/*.proto</include>
          </includes>
          <protocArtifact>com.google.protobuf:protoc:21.0-rc-1:exe:${os.detected.classifier}</protocArtifact>
          <extraArgs>--experimental_allow_proto3_optional</extraArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <inherited>false</inherited> <!-- only execute these in the parent -->
        <executions>
          <execution>
            <id>git submodule update</id>
            <phase>initialize</phase>
            <configuration>
              <executable>git</executable>
              <arguments>
                <argument>submodule</argument>
                <argument>update</argument>
                <argument>--init</argument>
                <argument>--recursive</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>configs</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/deploy/mysql</directory>
                  <includes>
                    <include>*.sql</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <properties>
        <skipITs>false</skipITs>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
  </profiles>
</project>
